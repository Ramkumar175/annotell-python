(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{107:function(e,t,n){"use strict";n.r(t),n.d(t,"MDXContext",(function(){return u})),n.d(t,"MDXProvider",(function(){return m})),n.d(t,"mdx",(function(){return j})),n.d(t,"useMDXComponents",(function(){return d})),n.d(t,"withMDXComponents",(function(){return s}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),s=function(e){return function(t){var n=d(t.components);return a.a.createElement(e,o({},t,{components:n}))}},d=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=d(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},h=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),u=d(n),s=r,m=u["".concat(o,".").concat(s)]||u[s]||b[s]||c;return n?a.a.createElement(m,l(l({ref:t},i),{},{components:n})):a.a.createElement(m,l({ref:t},i))}));function j(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,o=new Array(c);o[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<c;p++)o[p]=n[p];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},38:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return p}));var r=n(3),a=(n(0),n(107));const c={title:"Projects"},o={unversionedId:"input-api/project",id:"input-api/project",isDocsHomePage:!1,title:"Projects",description:"Project",source:"@site/docs/input-api/project.md",slug:"/input-api/project",permalink:"/annotell-python/docs/input-api/project",editUrl:"https://github.com/annotell/annotell-python/edit/gh-pages/docs-src/docs/input-api/project.md",version:"current",sidebar:"docs",previous:{title:"Key Concepts",permalink:"/annotell-python/docs/"},next:{title:"General",permalink:"/annotell-python/docs/input-api/general"}},i=[{value:"Project",id:"project",children:[{value:"List Projects",id:"list-projects",children:[]}]},{value:"Batch",id:"batch",children:[{value:"Batch Status",id:"batch-status",children:[]},{value:"Listing Batches",id:"listing-batches",children:[]},{value:"Publish Batch",id:"publish-batch",children:[]}]}],l={rightToc:i};function p({components:e,...t}){return Object(a.mdx)("wrapper",Object(r.default)({},l,t,{components:e,mdxType:"MDXLayout"}),Object(a.mdx)("h2",{id:"project"},"Project"),Object(a.mdx)("p",null,"In order to create inputs via the Input API, an Annotell project needs to exist.\nProjects are configured by the Annotell Professional Services team, during the Guideline Agreement Process (GAP) of a new client engagement."),Object(a.mdx)("h3",{id:"list-projects"},"List Projects"),Object(a.mdx)("pre",null,Object(a.mdx)("code",{parentName:"pre",className:"language-python"},"projects = client.project.get_projects()\n")),Object(a.mdx)("p",null,"Or via ",Object(a.mdx)("inlineCode",{parentName:"p"},"annoutil")," CLI"),Object(a.mdx)("pre",null,Object(a.mdx)("code",{parentName:"pre",className:"language-shell"},"annoutil projects\n")),Object(a.mdx)("p",null,"Returns all projects."),Object(a.mdx)("h2",{id:"batch"},"Batch"),Object(a.mdx)("p",null,"Input batches allow further grouping of inputs into smaller batches within a project. Specifying input batch during input creation is optional, and will otherwise default to the latest open batch."),Object(a.mdx)("p",null,"Ongoing projects can benefit from using batches in two ways"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"Group inputs collected at the same time"),Object(a.mdx)("li",{parentName:"ul"},"Perform guideline or task definition changes without the need for retroactive changes.")),Object(a.mdx)("h3",{id:"batch-status"},"Batch Status"),Object(a.mdx)("table",null,Object(a.mdx)("thead",{parentName:"table"},Object(a.mdx)("tr",{parentName:"thead"},Object(a.mdx)("th",{parentName:"tr",align:null},"Status"),Object(a.mdx)("th",{parentName:"tr",align:null},"Description"))),Object(a.mdx)("tbody",{parentName:"table"},Object(a.mdx)("tr",{parentName:"tbody"},Object(a.mdx)("td",{parentName:"tr",align:null},"pending"),Object(a.mdx)("td",{parentName:"tr",align:null},"Batch has been created but is still not fully configured by Annotell. Either during project setup or requested changes")),Object(a.mdx)("tr",{parentName:"tbody"},Object(a.mdx)("td",{parentName:"tr",align:null},"open"),Object(a.mdx)("td",{parentName:"tr",align:null},"Batch is open for new inputs")),Object(a.mdx)("tr",{parentName:"tbody"},Object(a.mdx)("td",{parentName:"tr",align:null},"ready"),Object(a.mdx)("td",{parentName:"tr",align:null},"Batch has been published and no longer open for new inputs.")),Object(a.mdx)("tr",{parentName:"tbody"},Object(a.mdx)("td",{parentName:"tr",align:null},"in-progress"),Object(a.mdx)("td",{parentName:"tr",align:null},"Annotell has started annotation of inputs within the batch.")),Object(a.mdx)("tr",{parentName:"tbody"},Object(a.mdx)("td",{parentName:"tr",align:null},"completed"),Object(a.mdx)("td",{parentName:"tr",align:null},"Annotations has been completed.")))),Object(a.mdx)("h3",{id:"listing-batches"},"Listing Batches"),Object(a.mdx)("pre",null,Object(a.mdx)("code",{parentName:"pre",className:"language-python"},'projects = client.project.get_project_batches("project_external_id")\n')),Object(a.mdx)("p",null,"Or via ",Object(a.mdx)("inlineCode",{parentName:"p"},"annoutil")," CLI"),Object(a.mdx)("pre",null,Object(a.mdx)("code",{parentName:"pre",className:"language-shell"},"annoutil project <project-external-id> --batches\n")),Object(a.mdx)("p",null,"Returns all batches for the project"),Object(a.mdx)("h3",{id:"publish-batch"},"Publish Batch"),Object(a.mdx)("pre",null,Object(a.mdx)("code",{parentName:"pre",className:"language-python"},'projects = client.project.publish_batch("project_external_id", "batch_external_id")\n')),Object(a.mdx)("p",null,"Publishes the input batch. Published batches are not open for new inputs. A project with ",Object(a.mdx)("em",{parentName:"p"},"multiple")," open batches will require you to specify which open batch to target when creating inputs, whereas a project with a single open batch will allow you omit batch when creating inputs."))}p.isMDXComponent=!0}}]);