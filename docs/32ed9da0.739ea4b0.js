(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{111:function(e,t,a){"use strict";a.r(t),a.d(t,"MDXContext",(function(){return o})),a.d(t,"MDXProvider",(function(){return s})),a.d(t,"mdx",(function(){return O})),a.d(t,"useMDXComponents",(function(){return m})),a.d(t,"withMDXComponents",(function(){return u}));var n=a(0),d=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,d=function(e,t){if(null==e)return{};var a,n,d={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(d[a]=e[a]);return d}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(d[a]=e[a])}return d}var o=d.a.createContext({}),u=function(e){return function(t){var a=m(t.components);return d.a.createElement(e,r({},t,{components:a}))}},m=function(e){var t=d.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},s=function(e){var t=m(e.components);return d.a.createElement(o.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return d.a.createElement(d.a.Fragment,{},t)}},j=d.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,r=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),o=m(a),u=n,s=o["".concat(r,".").concat(u)]||o[u]||b[u]||i;return a?d.a.createElement(s,c(c({ref:t},l),{},{components:a})):d.a.createElement(s,c({ref:t},l))}));function O(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,r=new Array(i);r[0]=j;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,r[1]=l;for(var p=2;p<i;p++)r[p]=a[p];return d.a.createElement.apply(null,r)}return d.a.createElement.apply(null,a)}j.displayName="MDXCreateElement"},39:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return o}));var n=a(3),d=a(8),i=(a(0),a(111)),r={title:"General"},l={unversionedId:"input-api/general",id:"input-api/general",isDocsHomePage:!1,title:"General",description:"Creating Inputs",source:"@site/docs/input-api/general.md",slug:"/input-api/general",permalink:"/annotell-python/docs/input-api/general",editUrl:"https://github.com/annotell/annotell-python/edit/gh-pages/docs-src/docs/input-api/general.md",version:"current",sidebar:"docs",previous:{title:"Projects",permalink:"/annotell-python/docs/input-api/project"},next:{title:"A Note on Version 1 and Version 0",permalink:"/annotell-python/docs/input-api/version_transition"}},c=[{value:"Creating Inputs",id:"creating-inputs",children:[{value:"Adding inputs to latest open batch for a project",id:"adding-inputs-to-latest-open-batch-for-a-project",children:[]},{value:"Adding inputs to specified batchfor a project",id:"adding-inputs-to-specified-batchfor-a-project",children:[]},{value:"Adding inputs to an input list (deprecated)",id:"adding-inputs-to-an-input-list-deprecated",children:[]}]},{value:"Input Status",id:"input-status",children:[]},{value:"List Inputs",id:"list-inputs",children:[{value:"Response",id:"response",children:[]}]},{value:"Invalidate Inputs",id:"invalidate-inputs",children:[]},{value:"List Invalidated Inputs",id:"list-invalidated-inputs",children:[]},{value:"Downloading Annotations",id:"downloading-annotations",children:[]}],p={rightToc:c};function o(e){var t=e.components,a=Object(d.default)(e,["components"]);return Object(i.mdx)("wrapper",Object(n.default)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(i.mdx)("h2",{id:"creating-inputs"},"Creating Inputs"),Object(i.mdx)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.mdx)("div",Object(n.default)({parentName:"div"},{className:"admonition-heading"}),Object(i.mdx)("h5",{parentName:"div"},Object(i.mdx)("span",Object(n.default)({parentName:"h5"},{className:"admonition-icon"}),Object(i.mdx)("svg",Object(n.default)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.mdx)("path",Object(n.default)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.mdx)("div",Object(n.default)({parentName:"div"},{className:"admonition-content"}),Object(i.mdx)("p",{parentName:"div"},"For detailed information about different input modalities, check ",Object(i.mdx)("a",Object(n.default)({parentName:"p"},{href:"inputs/images"}),"images"),", ",Object(i.mdx)("a",Object(n.default)({parentName:"p"},{href:"inputs/point_cloud_with_images"}),"point cloud with images")," or ",Object(i.mdx)("a",Object(n.default)({parentName:"p"},{href:"inputs/lidars_and_cameras_seq"}),"LidarsAndCamerasSeq"),"."))),Object(i.mdx)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.mdx)("div",Object(n.default)({parentName:"div"},{className:"admonition-heading"}),Object(i.mdx)("h5",{parentName:"div"},Object(i.mdx)("span",Object(n.default)({parentName:"h5"},{className:"admonition-icon"}),Object(i.mdx)("svg",Object(n.default)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(i.mdx)("path",Object(n.default)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"Annotell Users")),Object(i.mdx)("div",Object(n.default)({parentName:"div"},{className:"admonition-content"}),Object(i.mdx)("p",{parentName:"div"},"As an Annotell user, it is possible to specify ",Object(i.mdx)("inlineCode",{parentName:"p"},"client_organization_id")," to ",Object(i.mdx)("inlineCode",{parentName:"p"},"InputApiClient")," constructor to create inputs on behalf of a client organization"))),Object(i.mdx)("p",null,"In order to create inputs, they need to be associated with a ",Object(i.mdx)("a",Object(n.default)({parentName:"p"},{href:"project"}),"project")," and an ",Object(i.mdx)("a",Object(n.default)({parentName:"p"},{href:"project#batch"}),"input batch"),". Consider the following project setup:"),Object(i.mdx)("pre",null,Object(i.mdx)("code",Object(n.default)({parentName:"pre"},{}),"organization # root for projects\n\u2514\u2500\u2500 projects\n   \u251c\u2500\u2500 project-a\n       \u251c\u2500\u2500 batch-1 - completed\n       \u251c\u2500\u2500 batch-2 - open\n           \u251c\u2500\u2500 input 0edb8f59-a8ea-4c9b-aebb-a3caaa6f2ba3\n           \u251c\u2500\u2500 input 37d9dda4-3a29-4fcb-8a71-6bf16d5a9c36\n           \u2514\u2500\u2500 ...\n       \u2514\u2500\u2500 batch-3 - pending\n   \u2514\u2500\u2500 project-b\n       \u251c\u2500\u2500 batch-1\n       \u2514\u2500\u2500 ...\n")),Object(i.mdx)("p",null,"There are 3 ways in order to create inputs"),Object(i.mdx)("ul",null,Object(i.mdx)("li",{parentName:"ul"},"Adding inputs to latest open batch for a project"),Object(i.mdx)("li",{parentName:"ul"},"Adding inputs to specified batchfor a project"),Object(i.mdx)("li",{parentName:"ul"},"Adding inputs to an input list (deprecated)")),Object(i.mdx)("p",null,"The following examples all use an input of type ",Object(i.mdx)("inlineCode",{parentName:"p"},"IMAGES"),", however the interface applies to all input types."),Object(i.mdx)("h3",{id:"adding-inputs-to-latest-open-batch-for-a-project"},"Adding inputs to latest open batch for a project"),Object(i.mdx)("pre",null,Object(i.mdx)("code",Object(n.default)({parentName:"pre"},{className:"language-python"}),'client.create_inputs_images(\n    ...,\n    project="project-a")\n')),Object(i.mdx)("p",null,"Will add inputs to ",Object(i.mdx)("inlineCode",{parentName:"p"},"project-a")," ",Object(i.mdx)("inlineCode",{parentName:"p"},"batch-2")," because it's the latest open batch."),Object(i.mdx)("h3",{id:"adding-inputs-to-specified-batchfor-a-project"},"Adding inputs to specified batchfor a project"),Object(i.mdx)("pre",null,Object(i.mdx)("code",Object(n.default)({parentName:"pre"},{className:"language-python"}),'client.create_inputs_images(\n    ...,\n    project="project-a",\n    batch="batch-3")\n')),Object(i.mdx)("p",null,"Will add inputs to ",Object(i.mdx)("inlineCode",{parentName:"p"},"project-a")," ",Object(i.mdx)("inlineCode",{parentName:"p"},"batch-3"),"."),Object(i.mdx)("h3",{id:"adding-inputs-to-an-input-list-deprecated"},"Adding inputs to an input list (deprecated)"),Object(i.mdx)("pre",null,Object(i.mdx)("code",Object(n.default)({parentName:"pre"},{className:"language-python"}),"client.create_inputs_images(\n    ...,\n    input_list_id=500)\n")),Object(i.mdx)("p",null,"Will add inputs to input list ",Object(i.mdx)("inlineCode",{parentName:"p"},"500"),"."),Object(i.mdx)("div",{className:"admonition admonition-caution alert alert--warning"},Object(i.mdx)("div",Object(n.default)({parentName:"div"},{className:"admonition-heading"}),Object(i.mdx)("h5",{parentName:"div"},Object(i.mdx)("span",Object(n.default)({parentName:"h5"},{className:"admonition-icon"}),Object(i.mdx)("svg",Object(n.default)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(i.mdx)("path",Object(n.default)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"deprecated input_list_id")),Object(i.mdx)("div",Object(n.default)({parentName:"div"},{className:"admonition-content"}),Object(i.mdx)("p",{parentName:"div"},"Using input lists is deprecated and will be removed in future releases"))),Object(i.mdx)("h2",{id:"input-status"},"Input Status"),Object(i.mdx)("p",null,"Once an input has been created, it might be preprocessed before being made available for annotation. Also, postprocessing such as conversion to the client-specific format might take place after annotation has been performed. During this process, the status property of an input can be used to keep track of progress."),Object(i.mdx)("table",null,Object(i.mdx)("thead",{parentName:"table"},Object(i.mdx)("tr",{parentName:"thead"},Object(i.mdx)("th",Object(n.default)({parentName:"tr"},{align:null}),"Status"),Object(i.mdx)("th",Object(n.default)({parentName:"tr"},{align:null}),"Description"))),Object(i.mdx)("tbody",{parentName:"table"},Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"processing"),Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"Input has been received and currently processed by Annotell Platform, potentially performing conversion of file formats")),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"created"),Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"Input is created and available for annotation")),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"failed"),Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"Conversion of input failed")),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"invalidated:broken-input"),Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"Input was invalidated since it did not load")),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"invalidated:duplicate"),Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"Input was invalidated due to being uploaded several times")),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"invalidated:incorrectly-created"),Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"Input was invalidated because it was incorrectly created1")))),Object(i.mdx)("h2",{id:"list-inputs"},"List Inputs"),Object(i.mdx)("pre",null,Object(i.mdx)("code",Object(n.default)({parentName:"pre"},{className:"language-python"}),'project = "project-identifier"\nclient.input.get_inputs(project=project)\n')),Object(i.mdx)("p",null,"Inputs can be retrieved via the API by specifying project. Additional filter parameters are also available (see below) for querying inputs."),Object(i.mdx)("table",null,Object(i.mdx)("thead",{parentName:"table"},Object(i.mdx)("tr",{parentName:"thead"},Object(i.mdx)("th",Object(n.default)({parentName:"tr"},{align:null}),"Parameter"),Object(i.mdx)("th",Object(n.default)({parentName:"tr"},{align:null}),"Description"))),Object(i.mdx)("tbody",{parentName:"table"},Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"project"),Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"Project identifier to filter by")),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"batch"),Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"Which batch in the project to return inputs for")),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"external_ids"),Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"Return inputs matching the ",Object(i.mdx)("inlineCode",{parentName:"td"},"external_ids")," supplied")),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"include_invalidated"),Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"Filters inputs based on their status, defaults to ",Object(i.mdx)("inlineCode",{parentName:"td"},"False"))))),Object(i.mdx)("h3",{id:"response"},"Response"),Object(i.mdx)("table",null,Object(i.mdx)("thead",{parentName:"table"},Object(i.mdx)("tr",{parentName:"thead"},Object(i.mdx)("th",Object(n.default)({parentName:"tr"},{align:null}),"Property"),Object(i.mdx)("th",Object(n.default)({parentName:"tr"},{align:null}),"Description"))),Object(i.mdx)("tbody",{parentName:"table"},Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"internal_id"),Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"ID used to identify the input within the Annotell Platform")),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"external_id"),Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"External ID supplied during input creation")),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"batch_id"),Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"Which batch does the input belong to")),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"input_type"),Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"Type of input (see ",Object(i.mdx)("a",Object(n.default)({parentName:"td"},{href:"/annotell-python/docs/"}),"Input Types"),")")),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"status"),Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"Input status (see ",Object(i.mdx)("a",Object(n.default)({parentName:"td"},{href:"#input-status"}),"Input Statuses"),")")))),Object(i.mdx)("h2",{id:"invalidate-inputs"},"Invalidate Inputs"),Object(i.mdx)("pre",null,Object(i.mdx)("code",Object(n.default)({parentName:"pre"},{className:"language-python"}),'invalid_ids = ["0edb8f59-a8ea-4c9b-aebb-a3caaa6f2ba3", "37d9dda4-3a29-4fcb-8a71-6bf16d5a9c36"]\nreason = IAM.InvalidatedReasonInput.BAD_CONTENT\nclient.input.invalidate_inputs(invalid_ids, reason)\n')),Object(i.mdx)("p",null,"If issues are detected upstream related to inputs created, it is possible to invalidate inputs.\nInvalidated inputs will not produce annotations and any completed annotations of the input will be invalidated."),Object(i.mdx)("table",null,Object(i.mdx)("thead",{parentName:"table"},Object(i.mdx)("tr",{parentName:"thead"},Object(i.mdx)("th",Object(n.default)({parentName:"tr"},{align:null}),"Reason"),Object(i.mdx)("th",Object(n.default)({parentName:"tr"},{align:null}),"Description"))),Object(i.mdx)("tbody",{parentName:"table"},Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"bad-content"),Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"Input does not load, or has erroneous metadata such as invalid calibration")),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"duplicate"),Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"If same input has been created several times")),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"incorrectly-created"),Object(i.mdx)("td",Object(n.default)({parentName:"tr"},{align:null}),"If the input was unintentionally created.")))),Object(i.mdx)("h2",{id:"list-invalidated-inputs"},"List Invalidated Inputs"),Object(i.mdx)("p",null,"If errors are detected by Annotell, inputs will be invalidated and a reason will be supplied."),Object(i.mdx)("pre",null,Object(i.mdx)("code",Object(n.default)({parentName:"pre"},{className:"language-python"}),'project = "project-identifier"\nclient.input.get_inputs(project=project, include_invalidated=True)\n')),Object(i.mdx)("h2",{id:"downloading-annotations"},"Downloading Annotations"),Object(i.mdx)("p",null,"Once annotations are available they can be downloaded by supplying a list of internal ids for the corresponding inputs. A dictonary is returned containing available annotations for each input. Several annotations occur if the project is setup in such a way that each input should be annotated with different annotation types, e.g. Lane Markings and Objects."),Object(i.mdx)("pre",null,Object(i.mdx)("code",Object(n.default)({parentName:"pre"},{className:"language-python"}),"client.annotation.get_annotations(internal_ids=[\n    'decf6479-d540-459f-b924-a12c2cecf3b5',\n    '5da4f44b-16cb-414a-8dbd-ff5e5afc309a'\n])\n")))}o.isMDXComponent=!0}}]);