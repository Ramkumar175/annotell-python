(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{107:function(e,t,n){"use strict";n.r(t),n.d(t,"MDXContext",(function(){return p})),n.d(t,"MDXProvider",(function(){return u})),n.d(t,"mdx",(function(){return O})),n.d(t,"useMDXComponents",(function(){return d})),n.d(t,"withMDXComponents",(function(){return l}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function m(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),l=function(e){return function(t){var n=d(t.components);return a.a.createElement(e,i({},t,{components:n}))}},d=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=d(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,s=m(e,["components","mdxType","originalType","parentName"]),p=d(n),l=r,u=p["".concat(i,".").concat(l)]||p[l]||f[l]||o;return n?a.a.createElement(u,c(c({ref:t},s),{},{components:n})):a.a.createElement(u,c({ref:t},s))}));function O(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var m=2;m<o;m++)i[m]=n[m];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},41:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return m}));var r=n(3),a=(n(0),n(107));const o={title:"Cameras"},i={unversionedId:"input-api/inputs/cameras",id:"input-api/inputs/cameras",isDocsHomePage:!1,title:"Cameras",description:"All of the inputs at Annotell consists of one or several frames where a frame consists of inputs from several sensors, e.g. cameras or lidars. A Cameras input consists of a single frame of camera images, where the frame can contain between 1-8 images from different sensors.",source:"@site/docs/input-api/inputs/cameras.md",slug:"/input-api/inputs/cameras",permalink:"/annotell-python/docs/input-api/inputs/cameras",editUrl:"https://github.com/annotell/annotell-python/edit/gh-pages/docs-src/docs/input-api/inputs/cameras.md",version:"current",sidebar:"docs",previous:{title:"General",permalink:"/annotell-python/docs/input-api/general"},next:{title:"Lidars \ud83d\udea7",permalink:"/annotell-python/docs/input-api/inputs/lidars"}},s=[{value:"SensorSpecification",id:"sensorspecification",children:[]}],c={rightToc:s};function m({components:e,...t}){return Object(a.mdx)("wrapper",Object(r.default)({},c,t,{components:e,mdxType:"MDXLayout"}),Object(a.mdx)("p",null,"All of the inputs at Annotell consists of one or several ",Object(a.mdx)("strong",{parentName:"p"},"frames")," where a frame consists of inputs from several sensors, e.g. cameras or lidars. A ",Object(a.mdx)("inlineCode",{parentName:"p"},"Cameras")," input consists of a single frame of camera images, where the frame can contain between 1-8 images from different sensors."),Object(a.mdx)("pre",null,Object(a.mdx)("code",{parentName:"pre",className:"language-python",metastring:"reference",reference:!0},"https://github.com/annotell/annotell-python/blob/master/annotell-input-api/examples/cameras.py\n")),Object(a.mdx)("h3",{id:"sensorspecification"},"SensorSpecification"),Object(a.mdx)("p",null,"The ",Object(a.mdx)("inlineCode",{parentName:"p"},"SensorSpecification")," includes the fields ",Object(a.mdx)("inlineCode",{parentName:"p"},"sensor_to_pretty_name"),", ",Object(a.mdx)("inlineCode",{parentName:"p"},"sensor_order")," and ",Object(a.mdx)("inlineCode",{parentName:"p"},"sensor_settings"),", where only the latter is mandatory. Adding information about pretty name and sensor order is useful information during annotation."),Object(a.mdx)("table",null,Object(a.mdx)("thead",{parentName:"table"},Object(a.mdx)("tr",{parentName:"thead"},Object(a.mdx)("th",{parentName:"tr",align:null},"Parameter"),Object(a.mdx)("th",{parentName:"tr",align:null},"Description"))),Object(a.mdx)("tbody",{parentName:"table"},Object(a.mdx)("tr",{parentName:"tbody"},Object(a.mdx)("td",{parentName:"tr",align:null},Object(a.mdx)("inlineCode",{parentName:"td"},"sensor_to_pretty_name")),Object(a.mdx)("td",{parentName:"tr",align:null},Object(a.mdx)("em",{parentName:"td"},"(Optional)")," A mapping of sensor names to a prettier name version displayed in the Annotell Annotation Tool.")),Object(a.mdx)("tr",{parentName:"tbody"},Object(a.mdx)("td",{parentName:"tr",align:null},Object(a.mdx)("inlineCode",{parentName:"td"},"sensor_order")),Object(a.mdx)("td",{parentName:"tr",align:null},Object(a.mdx)("em",{parentName:"td"},"(Optional)")," Defines in what order (left to right) the camera sensors that should be shown in the Annotell Annotation Tool")),Object(a.mdx)("tr",{parentName:"tbody"},Object(a.mdx)("td",{parentName:"tr",align:null},Object(a.mdx)("inlineCode",{parentName:"td"},"sensor_settings")),Object(a.mdx)("td",{parentName:"tr",align:null},"A mapping of a sensor name to a ",Object(a.mdx)("inlineCode",{parentName:"td"},"CameraSettings")," object, where the ",Object(a.mdx)("inlineCode",{parentName:"td"},"CameraSettings")," object consists of the resolution of the image.")))),Object(a.mdx)("div",{className:"admonition admonition-tip alert alert--success"},Object(a.mdx)("div",{parentName:"div",className:"admonition-heading"},Object(a.mdx)("h5",{parentName:"div"},Object(a.mdx)("span",{parentName:"h5",className:"admonition-icon"},Object(a.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(a.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Use dryrun to validate input")),Object(a.mdx)("div",{parentName:"div",className:"admonition-content"},Object(a.mdx)("p",{parentName:"div"},"Setting ",Object(a.mdx)("inlineCode",{parentName:"p"},"dryrun")," parameter to true in the method call, will validate the input using the Input API but not create any inputs."))))}m.isMDXComponent=!0}}]);